"use strict";
(function(validate) {
  validate.Language = {
    "Use validate.async if you want support for promises" : "Use validate.async if you want support for promises",
    "Unknown validator %{name}" : "Unknown validator %{name}",
    "Unknown format %{format}" : "Unknown format %{format}",
    "can't be blank" : "can't be blank",
    "has an incorrect length" : "has an incorrect length",
    "is the wrong length (should be %{count} characters)"  : "is the wrong length (should be %{count} characters)",
    "is too short (minimum is %{count} characters)" : "is too short (minimum is %{count} characters)",
    "is too long (maximum is %{count} characters)" : "is too long (maximum is %{count} characters)",
    "must be a valid number" : "must be a valid number",
    "is not a number" : "is not a number",
    "must be an integer" : "must be an integer",
    "must be %{type} %{count}" : "must be %{type} %{count}",
    "must be odd" : "must be odd",
    "must be even" : "must be even",
    "Both the parse and format functions needs to be set to use the datetime/date validator" : "Both the parse and format functions needs to be set to use the datetime/date validator",
    "must be a valid date" : "must be a valid date",
    "must be no earlier than %{date}" : "must be no earlier than %{date}",
    "must be no later than %{date}" : "must be no later than %{date}",
    "is invalid" : "is invalid",
    "^%{value} is not included in the list" : "^%{value} is not included in the list",
    "^%{value} is restricted" : "^%{value} is restricted",
    "is not a valid email" : "is not a valid email",
    "is not equal to %{attribute}" : "is not equal to %{attribute}",
    "The attribute must be a non empty string" : "The attribute must be a non empty string",
    "is not a valid url" : "is not a valid url",
    "No type was specified" : "No type was specified",
    "validate.validators.type.types." : "validate.validators.type.types.",
    " must be a function." : " must be a function.",
    "must be of the correct type" : "must be of the correct type",
    "must be of type %{type}" : "must be of type %{type}"
  };
})();
